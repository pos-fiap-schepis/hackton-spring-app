name: Recover URL Service application

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-application-yml:
    name: Update application.yml with Deployed Values
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'us-east-1'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Retrieve Kubernetes Config
        run: |
          aws eks update-kubeconfig --region us-east-1 --name infra-cluster

      - name: Update application.yml in src/main/resources
        run: |
          echo "Fetching RDS and Kubernetes Service Endpoints..."

          RDS_ENDPOINT=$(aws rds describe-db-instances --db-instance-identifier hackaton-database --query "DBInstances[0].Endpoint.Address" --output text)
          KEYCLOAK_URL=$(kubectl get svc keycloak -n keycloak -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          MINIO_URL=$(kubectl get svc minio -n default -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          RABBITMQ_URL=$(kubectl get svc rabbitmq -n rabbitmq -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')

          echo "Updating application.yml with new values..."

          yq -i "
            .spring.datasource.url = \"jdbc:postgresql://$RDS_ENDPOINT:5432/hackaton\" |
            .spring.flyway.url = \"jdbc:postgresql://$RDS_ENDPOINT:5432/hackaton\" |
            .spring.security.oauth2.resourceserver.jwt.issuer-uri = \"http://$KEYCLOAK_URL/realms/hackaton\" |
            .spring.security.oauth2.resourceserver.jwt.jwk-set-uri = \"http://$KEYCLOAK_URL/realms/hackaton/protocol/openid-connect/certs\" |
            .spring.rabbitmq.host = \"$RABBITMQ_URL\" |
            .minio.endpoint = \"http://$MINIO_URL:9000\"
          " src/main/resources/application.yml

          echo "Updated application.yml:"



      - name: Generate Docs Changelog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/main/resources/application.yml
          git commit -m "chore: update application with url prodution" || echo "No changes to commit"

      - name: Push changes
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push     
